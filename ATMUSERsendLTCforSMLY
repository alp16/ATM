#/bin/bash
#
# ATMsendLTCforSMLY  
#                    -- ATM to deposit LTC and get SMLY
#                    -- creates a transaction with a SMLY address as a message and embeds into the LTC blockchain
#                    -- a black box operates someplace to return the SMLY
#
# NOTE1: This assumes that litecoin-cli is in your PATH variable
# NOTE2: This assumes that there is no LTC wallet passphrase -- i.e. you need to use the wallepassphrase command before signing the transaction
#
# 20. Dec 2017
#
# We are the buyer --  buying SMLY for LTC
# The algorithm
# 1 We send a LTC transaction to a LTC address
# 2 Embedded as a data field (OP_RETURN) in the LTC transaction is a SMLY address
# 3 The seller reads the LTC transaction and extracts the SMLY address
# 4 The seller sends us SMLY
#
# Overall amounts 
# We just send amountLTC to a special LTC ATM address, embedding the SMLY address as data
# The ATM sends back amountSMLY=amountLTC*rate*0.98 
# rate is picked off coinmarketcap
#
#------------------------------------------- ------------------------------------------- ------------------------------------------- ------------------------------------------
if [ X"$1" = X ]
then
  echo "Usage: $0 amountLTC"
  exit 1
fi
amountLTC=$1
# verify the argument
OK=`echo $amountLTC|awk '/^[0-9\.]+$/{OK=0;if($1>0&&$1<=1)OK=1;print OK}'`
echo "Got OK=$OK"
if [ "$OK" != "1" ]
then
  echo "Usage: $0 amountLTC"
  echo "where amountLTC must be between 0 and 1 LTC"
  exit 1
fi

# Simple stuff: 
# We need a SMLY recipient address for the remote SMLY demon to send stuff back to
# This is one of our own addresses -- to be transmitted on the LTC chain, coded in the LTC transaction
# We also need a LTC change address if the utxo is too high -- also one of our own addresses
recipient=`smileycoin-cli  getnewaddress`
myChangeAddress=`litecoin-cli  getnewaddress`
#
echo "Requesting the use of $recipient as my (coded) return address to receive SMLY"
echo "Sending LTC change, from outgoing LTC transaction, to my $myChangeAddress"
# Assume a standard full transmission of which 0.005 are fees.
fee=0.005
valueNeeded=`echo "x=$fee+$amountLTC;if(x<1) print 0; x"|bc`
forPurchase=`echo "x=$valueNeeded-$fee;if(x<1) print 0; x"|bc`  # must have leading zero for createrawtransaction
echo "Intend to buy SMLY for $forPurchase, fee is $fee so need a total of $valueNeeded"

#
# MEMO: awk may mess up the 8th decimal (the last Litoshi) when doing arithmetic - so use bc
#
# Next find a single utxo which is at least that much, but as close as possible
# This will ONLY WORK IF there is a single utxo which has enough LTC
list=`litecoin-cli  listunspent |
  sed -e 's/[:,"]//g'|
  awk '/txid/{txid=$2}
       /vout/{vout=$2}
       /amount/{amount=$2;print amount,vout,txid}'|tr -s '",' ' '|sort -n|awk '$1>'"$valueNeeded"|head -1`
if [ X"$list" = X ]
then
  echo "Error: Not enough LTC in one UTXO to support a request"
  exit 1
fi
echo "found the utxo to spend->$list<-"
set - $list
valueAvailable=$1    # This is LTC 
shift
vout=$1
shift
txid=$1
echo "txid to use: $txid --  vout to use: $vout"
myChange=`echo "x=$valueAvailable - $valueNeeded;if(x<1) print 0; x"|bc`  # must have leading zero for createrawtransaction
echo "change: $myChange= $valueAvailable - $valueNeeded"

recipientHex=`echo -n "$recipient" | xxd -ps |tr '\012' ' '|sed 's/ //g'` # hex version of SMLY address, for OP_RETURN data

# Now create the complete raw transaction 
creatCmd=`echo litecoin-cli  createrawtransaction \''[{"txid":"'$txid'","vout":'$vout'}]'\' \''{"Lcb1iTTGxHacPNK3rdZeyZY5y2wS7Bcn1z":'$forPurchase',"data":"'$recipientHex'","'$myChangeAddress'":'$myChange'}'\' `

echo $creatCmd|cat
echo $creatCmd  > 05c-createrawtransaction-message-b-creatCmd.txt
echo "Put the createrawtransaction command into 05c-createrawtransaction-message-b-creatCmd.txt"
trans=`echo $creatCmd|sh`
litecoin-cli  decoderawtransaction $trans > 05c-createrawtransaction-message-x-unsign.txt
echo The unsigned transaction is in 05c-createrawtransaction-message-x-unsign.txt
echo litecoin-cli  signrawtransaction $trans
signedJSON=`litecoin-cli  signrawtransaction $trans`
signed=`echo $signedJSON | tr ':,"' ' ' | sed -e 's/.*hex *//' -e 's/ .*//'`
litecoin-cli  decoderawtransaction $signed > 05c-createrawtransaction-message-y-signed.txt
echo litecoin-cli  sendrawtransaction $signed
litecoin-cli  decoderawtransaction $signed > 05c-createrawtransaction-message-z-toSend.txt
echo "Hit return to actually send the transaction"
read ans
litecoin-cli  sendrawtransaction "$signed"

